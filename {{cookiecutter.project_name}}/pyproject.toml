[project]
name = "{{cookiecutter.project_name}}"
version = "0.1.0"
description = "{{cookiecutter.project_description}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" }]
readme = "README.md"
keywords = ['python']
requires-python = ">={{cookiecutter.python_version}},<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: {{cookiecutter.python_version}}",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "importlib-metadata >=7.1.0,<8; python_version < '3.10'",
]

[project.urls]
"Bug Tracker" = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}/issues"
Homepage = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"
Repository = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
Documentation = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"

[dependency-groups]
dev = [
    "pytest>=8.1",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "wemake-python-styleguide>=1.0.0",
    {% if cookiecutter.deptry == 'y' %}"deptry>=0.22.0",{% endif %}
    "mypy>=1.13",
    {% if cookiecutter.codecov == 'y' %}"pytest-cov>=6.0.0",{% endif %}
    "ruff>=0.9.2",
    {% if cookiecutter.mkdocs == 'y' %}"mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",{% endif %}
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["src"]

[tool.mypy]
# The mypy configurations: http://bit.ly/2zEl9WI
files = ["src"]
strict = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
warn_unreachable = true

[tool.pytest.ini_options]
# pytest config: http://doc.pytest.org/en/latest/customize.html
pythonpath = ["src"]
testpaths = ["tests"]

[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
target-version = "py{{ cookiecutter.python_version | replace('.', '') }}"
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C90",  # maccabe
    "COM",  # flake8-commas
    "D",    # pydocstyle
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle
    "ERA",  # flake8-eradicate
    "EXE",  # flake8-executable
    "F",    # pyflakes
    "FBT",  # flake8-boolean-trap
    "FLY",  # pyflint
    "FURB", # refurb
    "G",    # flake8-logging-format
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "ISC",  # flake8-implicit-str-concat
    "LOG",  # flake8-logging
    "N",    # pep8-naming
    "PERF", # perflint
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # ruff
    "S",    # flake8-bandit
    "SIM",  # flake8-simpify
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "T100", # flake8-debugger
    "TRY",  # tryceratops
    "UP",   # pyupgrade
    "W",    # pycodestyle
    "YTT",  # flake8-2020
]
ignore = [
    "A005",   # allow to shadow stdlib and builtin module names
    "COM812", # trailing comma, conflicts with `ruff format`
    # Different doc rules that we don't really care about:
    "D100",
    "D104",
    "D106",
    "D203",
    "D212",
    "D401",
    "D404",
    "D405",
    "E501",    # line too long
    "E731",    # do not assign lambda
    "ISC001",  # implicit string concat conflicts with `ruff format`
    "ISC003",  # prefer explicit string concat over implicit concat
    "PLR09",   # we have our own complexity rules
    "PLR2004", # do not report magic numbers
    "PLR6301", # do not require classmethod / staticmethod when self not used
    "TRY003",  # long exception messages from `tryceratops`
]
external = [ "WPS" ]

# Plugin configs:
flake8-import-conventions.banned-from = [ "ast" ]
flake8-quotes.inline-quotes = "double"
mccabe.max-complexity = 6
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
  "S101", # asserts
  "S105", # hardcoded passwords
  "S404", # subprocess calls are for tests
  "S603", # do not require `shell=True`
  "S607", # partial executable paths
  "D103", # docstrings on public functions
]

[tool.ruff.format]
preview = true
quote-style = "double"
indent-style = "space"
docstring-code-format = false

{% if cookiecutter.codecov == "y"-%}
[tool.coverage.run]
# Coverage configuration: https://coverage.readthedocs.io/
branch = true
source = ["src"]

[tool.coverage.report]
skip_empty = true
{% endif %}
